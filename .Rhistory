devtools::install_github("bhklab/wCI", dependencies=TRUE)
install.packages("processx")
devtools::install_github("bhklab/wCI", dependencies=TRUE)
devtools::install_github("bhklab/wCI", dependencies=TRUE)
install.packages("backports")
install.packages("backports")
load("C:/Users/Grace Wu/text_features/R/temp_workspace.RData")
View(train_result)
View(train_result)
library(caret)
GDSC2 <- readRDS("C:/Users/Grace Wu/text_features/data/GDSC2.rds")
GDSC2 <- readRDS("./data/GDSC2.rds")
here
getwd()
getwd()
setwd("~/text_features")
GDSC2 <- readRDS("./data/GDSC2.rds")
molprof <- summarizeMolecularProfiles(GDSC2,
mDataType="Kallisto_0.46.1.rnaseq",
fill.missing=TRUE,
summarize=TRUE,
verbose=FALSE)
naSample <- apply(assay(molprof), 2, function(x) all(is.na(x)))
molprof <- molprof[, !naSample]
auc <- summarizeSensitivityProfiles(GDSC2,
sensitivity.measure="aac_recomputed",
fill.missing=TRUE,
verbose=FALSE)
sampletotake <- intersect(rownames(colData(molprof)), dimnames(auc)[[2]])
molprof <- molprof[, sampletotake]
auc <- auc[, sampletotake]
GDSC2 <- list("molprof"=molprof, "auc"=auc)
GDSC2_drug_ind <- match("Erlotinib", dimnames(GDSC2[["auc"]])[[1]])
labels <- GDSC2$auc[GDSC2_drug_ind, ][!is.na(GDSC2$auc[GDSC2_drug_ind, ])]
features <- assay(molprof[, names(labels)])
features <- as.data.frame(t(features))
features$labels <- labels[rownames(features)]
GDSC2_data <- features
GDSC2_labels <- GDSC2_data$labels
names(GDSC2_labels) <- dimnames(GDSC2_data)[[1]]
GDSC2_data$labels <- NULL
gene_vars <- apply(GDSC2_data, 2, var)
gene_names <- names(gene_vars[gene_vars > 0])
GDSC2_data <- GDSC2_data[, gene_names]
GDSC2_data <- as.matrix(GDSC2_data[, gene_names])
x <- GDSC2_data
y <- GDSC2_labels
train_result <- train(x=x,
y=y,
method="glmnet",
preProcess=c("center", "scale"),
maximize=TRUE,
tuneGrid=expand.grid(alpha=seq(0, 1, 0.2),
lambda=seq(0, 10, 1)),
trControl=trainControl(method="repeatedcv",
number=10,
repeats=5,
search="grid",
predictionBounds = c(0, 1),
allowParallel = FALSE,,
verboseIter=FALSE))
y <- GDSC2_labels
train_result <- train(x=x,
y=y,
method="glmnet",
preProcess=c("center", "scale"),
maximize=TRUE,
tuneGrid=expand.grid(alpha=seq(0, 1, 0.2),
lambda=seq(0, 10, 1)),
trControl=trainControl(method="repeatedcv",
number=10,
repeats=5,
search="grid",
predictionBounds = c(0, 1),
allowParallel = TRUE,
verboseIter=TRUE))
View(train_result)
View(train_result)
View(train_result)
GDSC2_pred_df <- data.frame(predict=predict(train_result, GDSC2_data),
+                            original=GDSC2_labels)
GDSC2_pred_df <- data.frame(predict=predict(train_result, GDSC2_data), original=GDSC2_labels)
View(GDSC2_pred_df)
train_result_alldata <- train_result
source("../R/summarizeData.R")
source("./R/summarizeData.R")
GDSC2 <- readRDS("./data/GDSC2.rds")
df = summarizeData(pSet=GDSC2, mDataType = "Kallisto_0.46.1.rnaseq", drug = "Erlotinib", sensitivity.measure="aac_recomputed")
View(df)
df[[2]]
df$assays
df.assays
df$Assay.Name
df$aac_recomputed
df$labels
GDSC2_data$labels
GDSC2_labels
GDSC2_data
df$data
df$colData
df@assays
df@assays.data
df@assays$data
df@assays@data
df@assays@data@listData
x <- df@assays@data@listData
df@colData
df$colData
df$labels
df@assays
x <- df@assays@data@listData@exprs
x <- df@assays@data@listData$exprs
View(x)
df@assays@data@listData
GDSC2_data
df@colData@listData@aac_recomputed
df@colData@aac_recomputed
df@aac_recomputed
names(df@colData)
names(df@colData@aac_recmputed)
names(df@colData@aac_recomputed)
names(df@colData$aac_recomputed)
df$aac_recomputed
View(GDSC2_data)
View(GDSC2_data)
train_result <- train(x=x,
y=y,
method="glmnet",
preProcess=c("center", "scale"),
maximize=TRUE,
tuneGrid=expand.grid(alpha=seq(0, 1, 0.2),
lambda=seq(0, 10, 1)),
trControl=trainControl(method="repeatedcv",
number=10,
repeats=5,
search="grid",
predictionBounds = c(0, 1),
allowParallel = TRUE,
verboseIter=TRUE))
nrow(x)
check_dims(x = x, y = y)
df@mol
nrow(GDSC2_data)
df$rownames
df$Comment.ENA_SAMPLE.
df[complete.cases(df), ]
x[complete.cases(x), ]
length(x[complete.cases(x), ])
x = x[complete.cases(x), ]
nrow(x)
nrow(x)
df@exp
df$colData
df@colData
x <- df$colData
nrows(x)
nrow(x)
df$colData
x <- df@colData
numrow(x)
nrow(x)
nrow(y)
ncol(y)
View(x)
x@listData
view(features)
View(features)
resamples(train_result)
resamples(train_result)
resamples(train_result, train_result)
summary(train_result)
print(train_result)
scales <- list(x=list(relation="free"), y=list(relation="free"))
scales
bwplot(train_result, scales=scales)
bwplot(train_result$results, scales=scales)
bwplot(train_result$results$RMSE, scales=scales)
bwplot(train_result$results$RMSE)
train_result$results$RMSE
bwplot(train_result$results$Rsquared)
bwplot(train_result$results$RMSE[1,12])
bwplot(train_result$results$RMSE[1:12])
save.image("~/text_features/newworkspace.RData")
GDSC2 <- readRDS("../data/GDSC2.rds")
library(PharmacoGx)
ci <- cellInfo(GDSC2)
?subsetTo
tm=readRDS("../train_output/GDSC2_Erlotinib_tm.rds")
tm=readRDS("train_output/GDSC2_Erlotinib_tm.rds")
tm=readRDS("~/Downloads/GDSC2_ERLOTINIB_tm.rds")
tm
library(caret)
library(psych)
library(PharmacoGx)
library(SummarizedExperiment)
library(tidyverse)
library(hrbrthemes)
library(viridis)
library(data.table)
library(stringi)
tm$prediction
head(tm$prediction)
tail(tm$prediction)
table(tm$prediction$resample, tm$prediction$original)
tm$stats$Resample01
library(caret)
?trainControl
0.123456789
round(0.123456789)
round(0.123456789, 4)
library(caret)
?postResample
fetCor<-apply(trainTransformed, 2, function(i)cor(i,y[trIndx]))
?postResample
