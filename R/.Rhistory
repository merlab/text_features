library(caret)
library(PharmacoGx)
source("./R/summarizeData.R")
source("./summarizeData.R")
GDSC2 <- readRDS("../data/GDSC2.rds")
df = summarizeData(pSet=GDSC2, mDataType = "Kallisto_0.46.1.rnaseq", drug = "Erlotinib", sensitivity.measure="aac_recomputed")
library(PharmacoGx)
df = summarizeData(pSet=GDSC2, mDataType = "Kallisto_0.46.1.rnaseq", drug = "Erlotinib", sensitivity.measure="aac_recomputed")
library(SummarizedExperiment)
df = summarizeData(pSet=GDSC2, mDataType = "Kallisto_0.46.1.rnaseq", drug = "Erlotinib", sensitivity.measure="aac_recomputed")
df = df[1:2000,]
df = df[, !is.na(colData(df)$aac_recomputed)]
NAsamples <- apply(assay(df), 2, function(i) any(is.na(i)))
df <- df[, !NAsamples]
gene_vars <- apply(assay(df), 1, var)
df <- df[gene_vars>0, ]
x <- t(assay(df))
y <- colData(df)$aac_recomputed
train_result_sample <- train(x=x,
y=y,
method="glmnet",
preProcess=c("center", "scale"),
maximize = TRUE,
na.rm = TRUE,
tuneGrid=expand.grid(alpha=seq(0, 1, 0.2),
lambda=seq(0, 10, 1)),
trControl=trainControl(method="repeatedcv",
number=10,
repeats=5,
search="grid",
predictionBounds = c(0, 1),
allowParallel = TRUE,
verboseIter=TRUE))
pred_sample <- data.frame(predict=predict(train_result_sample, x), original=y)
View(pred_sample)
View(train_result_sample)
train_results_sample$results
train_results_sample@results
train_results_sample
train_result_sample
train_result_sample$results
bwplot(train_result_sample)
bwplot(train_result_sample$results)
bwplot(train_result_sample$results$RMSE)
train_result_sample$results$RMSE
train_result_sample$results$RMSE[0:12]
bwplot(train_result_sample$results$RMSE[0:12])
bwplot(train_result_sample$results$RMSE[0:11])
bwplot(train_result_sample$results$RMSE, horizontal = FALSE)
bwplot(t(train_result_sample$results$RMSE[0:11]))
bwplot(train_result_sample$results$RMSE[0:11])
bwplot(train_result_sample$results$RMSE,  xlab="RMSE", ylab = "Erlotinib")
bwplot(train_result_sample$results$RMSE[0:11],  xlab="RMSE", ylab = "Erlotinib")
bwplot(train_result_sample$results$RMSE[0:11],  xlab="RMSE", ylab = "Erlotinib", main = "Model Accuracy by Drug")
train_result_sample <- train(x=x,
y=y,
method="glmnet",
preProcess=c("center", "scale"),
maximize = TRUE,
na.rm = TRUE,
tuneGrid=expand.grid(alpha=seq(0, 1, 0.2),
lambda=seq(0, 10, 1)),
trControl=trainControl(method="repeatedcv",
number=10,
search="grid",
predictionBounds = c(0, 1),
allowParallel = TRUE,
verboseIter=TRUE))
bwplot(train_result_sample$results$RMSE)
train_result_sample
bwplot(train_result_sample$results$RMSE,  xlab="RMSE", ylab = "Erlotinib", main = "Model Accuracy by Drug")
load("~/text_features/R/.RData")
train_result_sample$resample
train_result_sample <- train(x=x,
y=y,
method="glmnet",
preProcess=c("center", "scale"),
maximize = TRUE,
tuneGrid=expand.grid(alpha=seq(0, 1, 0.2),
lambda=seq(0, 10, 1)),
trControl=trainControl(method="repeatedcv",
number=10,
search="grid",
savePredictions ="all",
allowParallel = TRUE,
verboseIter=TRUE))
library(caret)
library(psych)
library(PharmacoGx)
library(SummarizedExperiment)
train_result_sample <- train(x=x,
y=y,
method="glmnet",
preProcess=c("center", "scale"),
maximize = TRUE,
tuneGrid=expand.grid(alpha=seq(0, 1, 0.2),
lambda=seq(0, 10, 1)),
trControl=trainControl(method="repeatedcv",
number=10,
search="grid",
savePredictions ="all",
allowParallel = TRUE,
verboseIter=TRUE))
saveRDS(train_result_sample, "model.rds")
pred_sample <- data.frame(predict=predict(train_result_sample, x), original=y)
View(pred_sample)
bwplot(train_result_sample$resample$RMSE,  xlab="RMSE", ylab = "Erlotinib", main = "Model Accuracy by Drug")
View(train_result_sample)
View(train_result_sample)
View(train_result_sample)
data$pred <- train_result_sample$pred[ , "pred"]
data <- train_result_sample$pred[ , "pred"]
data
train_result_sample$pred
train_result_sample$trainingData <- NULL
load("~/text_features/R/.RData")
bwplot(train_result_sample$resample$RMSE,  xlab="RMSE", ylab = "Erlotinib", main = "Model Accuracy by Drug")
library(caret)
library(psych)
library(PharmacoGx)
library(SummarizedExperiment)
bwplot(train_result_sample$resample$RMSE,  xlab="RMSE", ylab = "Erlotinib", main = "Model Accuracy by Drug")
library(caret)
set.seed(3456)
trainIndex <- createDataPartition(iris$Species, p = .8,
list = FALSE,
times = 1)
head(trainIndex)
trainIndex <- createDataPartition(iris$Species, p = .8,
list = FALSE,
times = 2)
head(trainIndex)
dim(trainIndex)
dim(iris)
trainIndex <- createDataPartition(iris$Species, p = .8,
list = TRUE,
times = 2)
head(trainIndex)
dim(trainIndex)
trainIndex <- createDataPartition(iris$Species, p = .8,
list = TRUE,
times = 3)
head(trainIndex)
library(caret)
set.seed(3456)
x=iris[,1:4]; y=iris$Species
trainIndex <- createDataPartition(y, p = .8,
list = TRUE,
times = 3)
names(trainIndex)
tsIndx <- setdiff(1:nrow(x), trIndx)
tsIndx <- setdiff(1:nrow(x), trIndx)
x=iris[,1:4]; y=iris$Species
trainIndex <- createDataPartition(y, p = .8,
list = TRUE,
times = 3)
#head(trainIndex)
for(res in names(trainIndex))
{
trIndx <- trainIndex[[res]]
tsIndx <- setdiff(1:nrow(x), trIndx)
}
res="Resample1"
trIndx <- trainIndex[[res]]
tsIndx <- setdiff(1:nrow(x), trIndx)
irIndx
trIndx
tsIndx
train_result_sample$trainingData <- NULL
library(caret)
library(psych)
library(PharmacoGx)
library(SummarizedExperiment)
bwplot(result [[1]]$resample$Accuracy,  xlab="Accuracy", ylab = "Erlotinib", main = "Text Mining - Accuracy by Drug")
library(tidyverse)
library(hrbrthemes)
library(viridis)
# create a dataset
data <- data.frame(
name=c( rep("A",500), rep("B",500), rep("B",500), rep("C",20), rep('D', 100)  ),
value=c( rnorm(500, 10, 5), rnorm(500, 13, 1), rnorm(500, 18, 1), rnorm(20, 25, 4), rnorm(100, 12, 1) )
)
data %>%
ggplot( aes(x=name, y=value, fill=name)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6, option="A") +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Basic boxplot") +
xlab("")
install.packages("hrbrthemes")
data %>%
ggplot( aes(x=name, y=value, fill=name)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6, option="A") +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Basic boxplot") +
xlab("")
library(hrbrthemes)
library(viridis)
data %>%
ggplot( aes(x=name, y=value, fill=name)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6, option="A") +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Basic boxplot") +
xlab("")
install.packages("hrbrthemes")
library(hrbrthemes)
data %>%
ggplot( aes(x=name, y=value, fill=name)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6, option="A") +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Basic boxplot") +
xlab("")
library(ggplot2)
library(dplyr)
data %>%
ggplot( aes(x=name, y=value, fill=name)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6, option="A") +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Basic boxplot") +
xlab("")
library(installr)
install.packages("installr")
library(installr)
updateR()
updateR()
data %>%
ggplot( aes(x=name, y=value, fill=name)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6, option="A") +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Basic boxplot") +
xlab("")
library(caret)
library(psych)
library(PharmacoGx)
library(SummarizedExperiment)
library(tidyverse)
library(hrbrthemes)
library(viridis)
